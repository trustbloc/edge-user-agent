#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

name: "Wallet CI"

env:
  GO_VERSION: 1.17

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  SemanticPullRequest:
    name: Semantic Pull Request Check
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Prettier:
    name: Prettier Check
    timeout-minutes: 5
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Run Wallet Web Prettier Check
        run: |
          echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make wallet-web-prettier-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ESLint:
    name: ESLint Check
    timeout-minutes: 5
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Run Wallet Web ESLint Check
        run: |
          echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make wallet-web-eslint-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Checks:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run checks
        run: |
          echo $PATH
          go env
          echo ${{ github.workspace }}
          echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make checks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  UnitTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run unit test
        run: make unit-test
      - name: Upload coverage to Codecov
        run: |
          bash <(curl https://codecov.io/bash)
        env:
          CODECOV_UPLOAD_TOKEN: ${{ secrets.CODECOV_UPLOAD_TOKEN }}

  UIUnitTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Wallet Web Unit Test
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 mediator.trustbloc.local' | sudo tee -a /etc/hosts
          echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make wallet-web-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  UIAutomation:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Wallet Web UI automation
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 wallet.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 wallet-server.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 mediator.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 uni-resolver-web.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 auth.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 auth-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 demo-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 edv.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 kms.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 file-server.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 demo-adapter.trustbloc.local' | sudo tee -a /etc/hosts
          echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make automation-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: logs
          path: test/fixtures/wallet-web/docker-compose.log

  Publish:
    name: Publish image
    if: github.event_name == 'push' && (github.repository == 'trustbloc/wallet' && github.ref == 'refs/heads/main')
    needs: [Prettier, ESLint, Checks, UnitTest, UIUnitTest, UIAutomation]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Setup Go 1.17
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Get current published version
        run: |
          TAG=$(git describe --tags --always `git rev-list --tags --max-count=1`)
          VERSION=$(git rev-parse --short=7 HEAD)
          echo "repoTag=${TAG} repoVersion=${VERSION}"
          if [[ $TAG == $VERSION ]]; then
              TAG=v0.0.0
          fi
          echo "CURRENT_SEMVER=${TAG:1}" >> $GITHUB_ENV
          echo "repoTag=${TAG} repoVersion=${VERSION} currentSemVer=${TAG:1}"

      - name: Bump published version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: "${{ env.CURRENT_SEMVER }}"
          # TODO: needs to be configurable https://github.com/christian-draeger/increment-semantic-version#input--output-examples
          version-fragment: "bug"

      - name: Set ENV vars
        run: |
          VERSION=$(git rev-parse --short=7 HEAD)
          echo "${{ env.CURRENT_SEMVER }}"
          echo "${{ steps.bump_version.outputs.next-version }}"
          echo "IMAGE_TAG"=v${{ steps.bump_version.outputs.next-version }}-snapshot-$VERSION >> $GITHUB_ENV
          echo "WALLET_WEB_IMAGE_PREFIX"=ghcr.io/trustbloc-cicd/wallet-web >> $GITHUB_ENV
          echo "WALLET_SERVER_IMAGE_PREFIX"=ghcr.io/trustbloc-cicd/wallet-server >> $GITHUB_ENV
          echo $DOCKER_PASSWORD | docker login ghcr.io --username $DOCKER_USER --password-stdin
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make wallet-web
        env:
          DOCKER_USER: ${{ secrets.CR_USER }}
          DOCKER_PASSWORD: ${{ secrets.CR_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and Push wallet-server image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./images/wallet-server/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            ALPINE_VER=3.15
            GO_VER=1.17
          push: true
          tags: |
            ${{ env.WALLET_SERVER_IMAGE_PREFIX }}:${{ env.IMAGE_TAG }}
            ${{ env.WALLET_SERVER_IMAGE_PREFIX }}:latest

      - name: Build and Push wallet-web image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./images/wallet-web/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            ALPINE_VER=3.15
            GO_VER=1.17
          push: true
          tags: |
            ${{ env.WALLET_WEB_IMAGE_PREFIX }}:${{ env.IMAGE_TAG }}
            ${{ env.WALLET_WEB_IMAGE_PREFIX }}:latest
