#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: "2"

services:
  wallet.trustbloc.local:
    container_name: wallet.trustbloc.local
    image: ${WALLET_WEB_IMAGE}:latest
    volumes:
      - ../keys/tls:/etc/nginx/certs
      - ./static:/etc/static
    ports:
      - 8091:443
    environment:
      - HTTP_RESOLVER_URL=${HTTP_RESOLVER}
      - AGENT_DEFAULT_LABEL=wallet-web
      - BLOC_DOMAIN=testnet.orb.local
      - DID_ANCHOR_ORIGIN=https://testnet.orb.local
      - EDGE_AGENT_SERVER=https://wallet-server.trustbloc.local:8090
      - HTTP_SERVER_HUB_AUTH_URL=https://hub-auth.trustbloc.local:8044
      - WALLET_MEDIATOR_URL=${WALLET_ROUTER_URL}
      - TLS_CERT=/etc/nginx/certs/ec-pubCert.pem
      - TLS_KEY=/etc/nginx/certs/ec-key.pem
      - EDV_SERVER_URL=https://edv-oathkeeper-proxy.trustbloc.local:4455/encrypted-data-vaults
      - STORAGE_TYPE=edv
      - KMS_TYPE=local
      - USE_EDV_CACHE=true
      - EDV_CLEAR_CACHE=10m
      - USE_EDV_BATCH=true
      - STATIC_ASSETS=/etc/static
      - STATIC_ASSETS_URL=https://wallet.trustbloc.local:8091
      # Disabled remote context download for this wallet for better performance.
  #      - CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}

  wallet-2.trustbloc.local:
    container_name: wallet-2.trustbloc.local
    image: ${WALLET_WEB_IMAGE}:latest
    volumes:
      - ../keys/tls:/etc/nginx/certs
      - ./static:/etc/static
    ports:
      - 8071:443
    environment:
      - HTTP_RESOLVER_URL=${HTTP_RESOLVER}
      - AGENT_DEFAULT_LABEL=second-wallet-web
      - BLOC_DOMAIN=testnet.orb.local
      - DID_ANCHOR_ORIGIN=https://testnet.orb.local
      - EDGE_AGENT_SERVER=https://wallet-server-2.trustbloc.local:8070
      - HTTP_SERVER_HUB_AUTH_URL=https://hub-auth.trustbloc.local:8044
      - WALLET_MEDIATOR_URL=${WALLET_ROUTER_URL}
      - TLS_CERT=/etc/nginx/certs/ec-pubCert.pem
      - TLS_KEY=/etc/nginx/certs/ec-key.pem
      - EDV_SERVER_URL=https://edv-oathkeeper-proxy.trustbloc.local:4455/encrypted-data-vaults
      - STORAGE_TYPE=edv
      - KMS_TYPE=local
      - USE_EDV_CACHE=true
      - EDV_CLEAR_CACHE=10m
      - USE_EDV_BATCH=true
      - STATIC_ASSETS=/etc/static
      - STATIC_ASSETS_URL=
      - CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}

  hub-router.trustbloc.local:
    container_name: hub-router.trustbloc.local
    image: ${HUB_ROUTER_IMAGE}:${HUB_ROUTER_IMAGE_TAG}
    environment:
      - HUB_ROUTER_HOST_URL=${HUB_ROUTER_HOST}:${HUB_ROUTER_API_PORT}
      - HUB_ROUTER_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - HUB_ROUTER_TLS_SYSTEMCERTPOOL=true
      - HUB_ROUTER_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - HUB_ROUTER_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - HUB_ROUTER_DIDCOMM_HTTP_HOST=${HUB_ROUTER_HOST}:${HUB_ROUTER_HTTP_INBOUND_PORT}
      - HUB_ROUTER_DIDCOMM_HTTP_HOST_EXTERNAL=https://hub-router.trustbloc.local:${HUB_ROUTER_HTTP_INBOUND_PORT}
      - HUB_ROUTER_DIDCOMM_WS_HOST=${HUB_ROUTER_HOST}:${HUB_ROUTER_WS_INBOUND_PORT}
      - HUB_ROUTER_DIDCOMM_WS_HOST_EXTERNAL=wss://localhost:${HUB_ROUTER_WS_INBOUND_PORT}
      - HUB_ROUTER_HTTP_RESOLVER=orb@https://testnet.orb.local/sidetree/v1/identifiers
      - HUB_ROUTER_DIDCOMM_V2=true
      - HUB_ROUTER_ORB_DOMAINS=${HUB_ROUTER_ORB_DOMAINS}
      - HUB_ROUTER_KEY_TYPE=${HUB_ROUTER_V2_KEY_TYPE}
      - HUB_ROUTER_KEY_AGREEMENT_TYPE=${HUB_ROUTER_V2_KEY_AGREEMENT_TYPE}
      - HUB_ROUTER_DSN_PERSISTENT=mem://tests
      - HUB_ROUTER_DSN_TRANSIENT=mem://tests
      - HUB_ROUTER_DSN_TIMEOUT=45
    ports:
      - ${HUB_ROUTER_API_PORT}:${HUB_ROUTER_API_PORT}
      - ${HUB_ROUTER_HTTP_INBOUND_PORT}:${HUB_ROUTER_HTTP_INBOUND_PORT}
      - ${HUB_ROUTER_WS_INBOUND_PORT}:${HUB_ROUTER_WS_INBOUND_PORT}
    entrypoint: ""
    command: /bin/sh -c "hub-router start"
    volumes:
      - ../keys/tls:/etc/tls

  hub-router-2.example.com:
    container_name: hub-router-2.example.com
    image: ${HUB_ROUTER_IMAGE}:${HUB_ROUTER_IMAGE_TAG}
    environment:
      - HUB_ROUTER_HOST_URL=${HUB_ROUTER2_HOST}:${HUB_ROUTER2_API_PORT}
      - HUB_ROUTER_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - HUB_ROUTER_TLS_SYSTEMCERTPOOL=true
      - HUB_ROUTER_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - HUB_ROUTER_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - HUB_ROUTER_DIDCOMM_HTTP_HOST=${HUB_ROUTER2_HOST}:${HUB_ROUTER2_HTTP_INBOUND_PORT}
      - HUB_ROUTER_DIDCOMM_HTTP_HOST_EXTERNAL=https://localhost:${HUB_ROUTER2_HTTP_INBOUND_PORT}
      - HUB_ROUTER_DIDCOMM_WS_HOST=${HUB_ROUTER2_HOST}:${HUB_ROUTER2_WS_INBOUND_PORT}
      - HUB_ROUTER_DIDCOMM_WS_HOST_EXTERNAL=wss://localhost:${HUB_ROUTER2_WS_INBOUND_PORT}
      - HUB_ROUTER_HTTP_RESOLVER=orb@https://testnet.orb.local/sidetree/v1/identifiers
      - HUB_ROUTER_DIDCOMM_V2=true
      - HUB_ROUTER_ORB_DOMAINS=${HUB_ROUTER2_ORB_DOMAINS}
      - HUB_ROUTER_KEY_TYPE=${HUB_ROUTER2_V2_KEY_TYPE}
      - HUB_ROUTER_KEY_AGREEMENT_TYPE=${HUB_ROUTER2_V2_KEY_AGREEMENT_TYPE}
      - HUB_ROUTER_DSN_PERSISTENT=mem://tests
      - HUB_ROUTER_DSN_TRANSIENT=mem://tests
      - HUB_ROUTER_DSN_TIMEOUT=45
    ports:
      - ${HUB_ROUTER2_API_PORT}:${HUB_ROUTER2_API_PORT}
      - ${HUB_ROUTER2_HTTP_INBOUND_PORT}:${HUB_ROUTER2_HTTP_INBOUND_PORT}
      - ${HUB_ROUTER2_WS_INBOUND_PORT}:${HUB_ROUTER2_WS_INBOUND_PORT}
    entrypoint: ""
    command: /bin/sh -c "hub-router start"
    volumes:
      - ../keys/tls:/etc/tls

  sidetree:
    container_name: testnet.orb.local
    image: ${SIDETREE_MOCK_IMAGE}:${SIDETREE_MOCK_IMAGE_TAG}
    environment:
      - SIDETREE_MOCK_TLS_CERTIFICATE=/etc/sidetree/tls/ec-pubCert.pem
      - SIDETREE_MOCK_TLS_KEY=/etc/sidetree/tls/ec-key.pem
      - SIDETREE_MOCK_HOST=0.0.0.0
      - SIDETREE_MOCK_PORT=443
      - SIDETREE_MOCK_DID_NAMESPACE=did:orb
      - SIDETREE_MOCK_DID_ALIASES=did:orb:testnet.orb.local
      - SIDETREE_MOCK_EXTERNAL_ENDPOINT=https://testnet.orb.local
      - SIDETREE_MOCK_WELLKNOWN_PATH=did-orb
    ports:
      - 443:443
    volumes:
      - ../keys/tls:/etc/sidetree/tls

  uni-resolver-web.trustbloc.local:
    container_name: uni-resolver-web.trustbloc.local
    image: universalresolver/uni-resolver-web:latest
    ports:
      - "9080:8080"
    volumes:
      - ./config.json:/opt/uni-resolver-java/uni-resolver-web/config.json

  driver-did-key:
    image: universalresolver/driver-did-key:latest
    ports:
      - "8098:8080"

  file-server.trustbloc.local: # file server for hosting static resources (e.g. JSON-LD contexts)
    container_name: file-server.trustbloc.local
    image: halverneus/static-file-server:latest
    environment:
      - PORT=12096
      - FOLDER=/data
      - TLS_CERT=/etc/tls/ec-pubCert.pem
      - TLS_KEY=/etc/tls/ec-key.pem
      - CORS=true
    ports:
      - 12096:12096
    volumes:
      - ./static/contexts:/data
      - ../keys/tls:/etc/tls
