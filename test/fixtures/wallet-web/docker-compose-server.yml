#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: "2"

services:
  mongodb.example.com:
    container_name: mongodb.example.com
    image: mongo:4.0.0
    ports:
      - "27017:27017"

  edv.trustbloc.local:
    container_name: edv.trustbloc.local
    image: ${EDV_REST_IMAGE}:${EDV_REST_IMAGE_TAG}
    environment:
      - EDV_HOST_URL=${EDV_HOST}:${EDV_PORT}
      - EDV_DATABASE_TYPE=${EDV_DATABASE_TYPE}
      - EDV_DATABASE_URL=${EDV_DATABASE_URL}
      - EDV_DATABASE_PREFIX=${EDV_DATABASE_PREFIX}
      - EDV_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - EDV_TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - EDV_TLS_KEY_FILE=/etc/tls/ec-key.pem
      - EDV_AUTH_TYPE=GNAP
      - EDV_LOCALKMS_SECRETS_DATABASE_TYPE=${EDV_DATABASE_TYPE}
      - EDV_LOCALKMS_SECRETS_DATABASE_URL=${EDV_DATABASE_URL}
      - EDV_LOCALKMS_SECRETS_DATABASE_PREFIX=${EDV_DATABASE_PREFIX}_kms_
      - EDV_EXTENSIONS=ReturnFullDocumentsOnQuery,Batch
      - EDV_GNAP_SIGNING_KEY=/etc/gnap-edv-priv-key.pem
      - EDV_AUTH_SERVER_URL=https://auth.trustbloc.local:8044
      - EDV_CORS_ENABLE=true
      - EDV_HOST_URL_EXTERNAL=https://edv.trustbloc.local:${EDV_PORT}
    ports:
      - ${EDV_PORT}:${EDV_PORT}
    volumes:
      - ../keys:/etc
    command: start
    depends_on:
      - mongodb.example.com

  kms.example.com:
    container_name: kms.trustbloc.local
    image: ${KMS_IMAGE}:${KMS_IMAGE_TAG}
    environment:
      - KMS_HOST=${KMS_HOST}:${DEMO_OPS_KMS_PORT}
      - KMS_BASE_URL=https://kms.trustbloc.local:8075
      - KMS_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - KMS_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - KMS_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - KMS_DATABASE_TYPE=mongodb
      - KMS_DATABASE_URL=${EDV_DATABASE_URL}
      - KMS_DATABASE_PREFIX=opskms_
      - KMS_SECRET_LOCK_TYPE=local
      - KMS_SECRET_LOCK_KEY_PATH=/etc/tls/secret-lock.key
      - KMS_CACHE_EXPIRATION=10m
      - KMS_LOG_LEVEL=debug
      - KMS_GNAP_SIGNING_KEY=/etc/gnap-kms-priv-key.pem
      - KMS_AUTH_SERVER_URL=https://auth.trustbloc.local:8044
      - KMS_CORS_ENABLE=true
    ports:
      - ${DEMO_OPS_KMS_PORT}:${DEMO_OPS_KMS_PORT}
    command: start
    volumes:
      - ../keys:/etc
    depends_on:
      - mongodb.example.com

  auth.trustbloc.local:
    container_name: auth.trustbloc.local
    image: ${AUTH_REST_IMAGE}:${AUTH_REST_IMAGE_TAG}
    environment:
      - AUTH_REST_HOST_URL=0.0.0.0:8044
      - AUTH_REST_EXTERNAL_URL=https://auth.trustbloc.local:8044
      - AUTH_REST_TLS_CACERTS=/etc/keys/tls/ec-cacert.pem
      - AUTH_REST_DEVICE_CACERTS=/etc/keys/device/ec-cacert.pem
      - AUTH_REST_TLS_SYSTEMCERTPOOL=true
      - AUTH_REST_TLS_SERVE_CERT=/etc/keys/tls/ec-pubCert.pem
      - AUTH_REST_TLS_SERVE_KEY=/etc/keys/tls/ec-key.pem
      - AUTH_REST_DATABASE_TYPE=mongodb
      - AUTH_REST_DATABASE_URL=mongodb://mongodb.example.com:27017
      - AUTH_REST_DATABASE_PREFIX=authrest_
      - AUTH_REST_OIDC_CALLBACK=https://auth.trustbloc.local:8044/oauth2/callback
      - AUTH_REST_OIDC_PROVIDERS_CONFIG=/etc/oidc-config/demo_providers.yaml
      - AUTH_REST_SDS_DOCS_URL=https://TODO.docs.sds.org/
      - AUTH_REST_SDS_OPSKEYS_URL=https://TODO.keys.sds.org/
      - AUTH_REST_KEYSERVER_AUTH_URL=https://TODO.auth.keyserver.org/
      - AUTH_REST_KEYSERVER_OPS_URL=https://TODO.ops.keyserver.org/
      - AUTH_REST_HYDRA_URL=https://auth-hydra.trustbloc.local:5556
      - AUTH_REST_LOG_LEVEL=DEBUG
      - AUTH_REST_API_TOKEN=test_token
      - AUTH_REST_COOKIE_AUTH_KEY=/etc/keys/session_cookies/auth.key
      - AUTH_REST_COOKIE_ENC_KEY=/etc/keys/session_cookies/enc.key
      - AUTH_REST_STATIC_IMAGES=/etc/static/images
      - GNAP_ACCESS_POLICY=/etc/static/config/access_policy.json
    ports:
      - 8044:8044
    entrypoint: ""
    command: /bin/sh -c "sleep 30 && auth-rest start"
    volumes:
      - ../keys:/etc/keys
      - ./oidc-config:/etc/oidc-config
      - ./static:/etc/static
    depends_on:
      - auth-hydra.trustbloc.local
      - mongodb.example.com

  auth-hydra.trustbloc.local:
    container_name: auth-hydra.trustbloc.local
    image: oryd/hydra:${HYDRA_IMAGE_TAG}
    ports:
      - 5555:5555 # Public port
      - 5556:5556 # Admin port
    command: /bin/sh -c "hydra migrate sql --read-from-env --yes; tmp/hydra_configure.sh& hydra serve all"
    entrypoint: ""
    environment:
      - DSN=mysql://authresthydra:authresthydra-secret-pw@tcp(mysql:3306)/authresthydra?max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER=https://auth-hydra.trustbloc.local:5555/
      - URLS_CONSENT=https://auth.trustbloc.local:8044/hydra/consent
      - URLS_LOGIN=https://auth.trustbloc.local:8044/hydra/login
      - SECRETS_SYSTEM=testSecretsSystem
      - OIDC_SUBJECT_TYPES_SUPPORTED=public
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=testSecretsSystem
      - SERVE_TLS_KEY_PATH=/etc/tls/ec-key.pem
      - SERVE_TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
      - SERVE_PUBLIC_PORT=5555
      - SERVE_ADMIN_PORT=5556
    restart: unless-stopped
    volumes:
      - ../keys/tls:/etc/tls
      - ./hydra-config/auth-rest-hydra_configure.sh:/tmp/hydra_configure.sh
    depends_on:
      - mysql

  demo-hydra.trustbloc.local:
    container_name: demo-hydra.trustbloc.local
    image: oryd/hydra:${HYDRA_IMAGE_TAG}
    ports:
      - 7777:7777 # Public port
      - 7778:7778 # Admin port
    command: /bin/sh -c "hydra migrate sql --read-from-env --yes; tmp/hydra_configure.sh& hydra serve all"
    entrypoint: ""
    environment:
      - DSN=mysql://demohydra:demohydra-pwd@tcp(mysql:3306)/demohydra?max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER=https://demo-hydra.trustbloc.local:7777/
      - URLS_CONSENT=http://localhost:3300/consent
      - URLS_LOGIN=http://localhost:3300/login
      - SECRETS_SYSTEM=testSecretsSystem
      - OIDC_SUBJECT_TYPES_SUPPORTED=public
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=testSecretsSystem
      - SERVE_TLS_KEY_PATH=/etc/tls/ec-key.pem
      - SERVE_TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
      - SERVE_PUBLIC_PORT=7777
      - SERVE_ADMIN_PORT=7778
    restart: unless-stopped
    volumes:
      - ../keys/tls:/etc/tls
      - ./hydra-config/demo_hydra_configure.sh:/tmp/hydra_configure.sh
    depends_on:
      - mock-login-consent.example.com
      - mysql

  mysql:
    container_name: mysql
    image: mysql:${MYSQL_IMAGE_TAG}
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
    logging:
      driver: "none"
    volumes:
      - ./mysql-config:/docker-entrypoint-initdb.d

  mock-login-consent.example.com:
    container_name: mock-login-consent.example.com
    image: ${MOCK_DEMO_LOGIN_CONSENT_IMAGE}:latest
    environment:
      - ADMIN_URL=https://demo-hydra.trustbloc.local:7778
      - SERVE_PORT=3300
      - TLS_CACERTS=/etc/tls/ec-cacert.pem
    ports:
      - 3300:3300
    volumes:
      - ../keys/tls:/etc/tls
